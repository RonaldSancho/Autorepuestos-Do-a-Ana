@model Autorepuestos.Entities.ProductosEntities
@{
    ViewBag.Title = "ModificarProducto";
}

<div class="contenedor">
    <div class="row">
        <div class="col-md-12">
            <div class="card" style="background-color: white">
                <div class="card-header" style="background-color: #cbcbcb; height: 50px;">
                    <h3 class="titulo-card-estilo">Modificar Producto</h3>
                </div>
                <div class="card-body">
                    <br />

                    @using (Html.BeginForm("ModificarProducto", "Producto", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "form-layout row mg-b-25" }))
                    {

                        @Html.HiddenFor(m => m.pIdProducto, new{@class="form-control", @style="color:grey"})

                        @Html.AntiForgeryToken()

                        <div class="row">

                            <div class="col-md-4">
                                @Html.LabelFor(m => m.NombreProducto, new{@class="form-control-label col-md-4"})
                                @Html.TextBoxFor(m => m.NombreProducto , new{@type = "text ",@class = "form-control col-md-4"})
                                @Html.ValidationMessageFor(m => m.NombreProducto, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(m => m.Descripcion, new{@class="form-control-label col-md-4"})
                                @Html.TextBoxFor(m => m.Descripcion, new{@type = "text ",@class = "form-control col-md-4"})
                                @Html.ValidationMessageFor(m => m.Descripcion, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(m => m.Precio, new{ @class="form-control-label col-md-4"})
                                @Html.TextBoxFor(m => m.Precio, new{@type = "number ",@class = "form-control col-md-4"})
                                @Html.ValidationMessageFor(m => m.Precio, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <br />
                        <br />
                        <br />
                        <br />

                        <div class="row">
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.IdProveedor,  new{@class="form-control-label col-md-4"})
                                @if (ViewBag.ComboProveedores != null)
                                {
                                    @Html.DropDownListFor(model => model.IdProveedor, ViewBag.ComboProveedores as List<SelectListItem>, new { @class = "form-control col-md-4" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.IdProveedor, new List<SelectListItem>(), new { @class = "form-control col-md-4" })
                                }
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.IdCategoria, new {@class="form-control-label col-md-4"})
                                @if (ViewBag.ComboCategorias != null)
                                {
                                    @Html.DropDownListFor(model => model.IdCategoria, ViewBag.ComboCategorias as List<SelectListItem>, new { @class = "form-control col-md-4" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.IdCategoria, new List<SelectListItem>(), new { @class = "form-control col-md-4" })
                                }
                            </div>
                            <div class=" col-md-4">
                                @Html.LabelFor(m => m.Existencias,  new{@class="form-control-label col-md-4"})
                                @Html.TextBoxFor(m => m.Existencias,  new{@type = "number ",@class = "form-control col-md-4"})
                                @Html.ValidationMessageFor(m => m.Existencias, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <br />
                        <br />
                        <br />
                        <br />

                        <div class="row">

                            <div class="col-md-4">
                                @Html.LabelFor(m => m.ImagenDatos, new{@class="form-control-label col-md-4 "})
                                @Html.TextBoxFor(m => m.ImagenDatos, new{@class = "form-control col-md-4",@type = "file",@accept=".png,.jpg,.jpeg"})
                            </div>
                        </div>

                        <br />
                        <br />
                        <br />
                        <br />

                        <div class="row">
                            <div class="col-md-8">
                                <input type="submit" id="ProductoEditado" class="btn btn-success" value="Guardar" />
                                <a class="btn btn-secondary" role="button" href="@Url.Action("MostrarProductos","Producto")">Cancelar</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/js/site.js"></script>
    <script>
        @if (TempData.ContainsKey("MensajeModificacionProducto") && (bool)TempData["MensajeModificacionProducto"])
        {
            @:MensajeModificacionProducto();
        }
    </script>
}



