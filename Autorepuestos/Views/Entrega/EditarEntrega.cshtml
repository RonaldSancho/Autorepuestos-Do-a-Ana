@model Autorepuestos.Entities.EntregasEntities
@{
    ViewBag.Title = "EditarEntrega";
}


<div class="contenedor">
    <div class="row">
        <div class="col-md-12">
            <div class="card" style="background-color: white">
                <div class="card-header" style="background-color: #cbcbcb; height: 50px;">
                    <h3 class="titulo-card-estilo">Modificar Entrega</h3>
                </div>
                <div class="card-body">
                    <br />

                    @using (Html.BeginForm("EditarEntrega", "Entrega", FormMethod.Post, new { @class = "form-layout row mg-b-25" }))
                    {
                        @Html.HiddenFor(m => m.pIdEntrega, new{@class="form-control", @style="color:grey"})

                        @Html.AntiForgeryToken()

                        <div class="row">

                            <div class="col-md-4">
                                @Html.LabelFor(m => m.Productos, new {@class="form-control-label"})
                                @Html.TextBoxFor(model => model.Productos,new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Productos, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(m => m.pNombre, new{@class="form-control-label"})
                                @Html.TextBoxFor(model => model.pNombre, new { @class = "form-control", @readOnly=true })
                                @Html.ValidationMessageFor(m => m.pNombre, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <br />
                        <br />
                        <br />
                        <br />
                        <br />

                        <div class="row">
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.DireccionEntrega, new{@class="form-control-label"})
                                @Html.TextBoxFor(m => m.DireccionEntrega,new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.DireccionEntrega, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(m => m.Estado, new{@class="form-control-label"})
                                @if (ViewBag.ComboEstado != null)
                                {
                                    @Html.DropDownListFor(model => model.Estado, ViewBag.ComboEstado as List<SelectListItem>, new { @class = "form-control" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.Estado, new List<SelectListItem>(), new { @class = "form-control" })
                                }
                                
                            </div>
                        </div>

                        <br />
                        <br />
                        <br />
                        <br />

                        <div class="row">
                            <div class="col-md-8">
                                <input type="submit" id="EntregaEditada" class="btn btn-success" value="Guardar" />
                                <a class="btn btn-secondary" role="button" href="@Url.Action("VerEntregas","Entrega")">Cancelar</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/js/site.js"></script>
    <script>
        @if (TempData.ContainsKey("MensajeModificacionEntrega") && (bool)TempData["MensajeModificacionEntrega"])
        {
            @:MensajeModificacionEntrega();
        }
    </script>
}